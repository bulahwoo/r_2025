### lsb_release -cs

- Install R

- Use tab for autocompletion
  eg.

- Searching through history with up and down arrow
  eg.

- Built-in function
  function(...)
  eg. ls()
  eg. getwd()
  eg. setwd()
  eg. q()

You can quit using q() or pressing CTRL+c.
When doing so, you will be asked if you want to save a workspace image.
$ Save workspace image? [y/n/c]:
A workspace is an environment for created variables.
You don't need to save it here, so type "n" and enter to quit R.

- Install a package tidyverse using the function install.packages()
  install.packages("tidyverse")

- Install RStudio

  !!! quit R !!!
  !!! start terminal !!!
  
  $ ls
  $ sudo add-apt-repository universe
  $ sudo apt-get install gdebi-core

Step 2: Go to R Studio downloads and select the latest *.deb package available under Ubuntu 18/Debian 10.

Step 3: Navigate to the Downloads folder in the local machine.

  $ ls
  $ rstudio-1.2.5042-amd64.deb

Step 4: Install using gdebi package.

  $ sudo gdebi rstudio-1.2.5042-amd64.deb

- change the background color in RStudio

  $ cd

head()
tail()
typeof()

str()
dim()

### install R ###

### ###
Part1: install r, R console, install rstudio

Part2: rstudio interface, assignment operator, vector, data frame, export data
  https://shivamchoudhary2k.medium.com/vectors-and-lists-in-r-a6463e11b702
  The most common numeric data type used in R are integer and double (for double precision floating point numbers).

Part3: import data

Part4: index and subset vector

ed_exp2 <- education[-c(1:9,22:50)]
ed_exp3 <- education[which(education$Region == 2)]

Part5: index and subset data.frame 
ed_exp2 <- education[-c(1:9,22:50),-c(1,3:5)]
ed_exp3 <- education[which(education$Region == 2),]

Part6: pipeline, start with AND and OR for complicated filteration
education[which(education$Region > 2 & education$Region < 12),]
education[which(education$Region > 2 | education$Region < 12),]

dplyr
The five basic “verbs” (functions) are:
  select: select/unselect variables
  filter: filter observations
  mutate: compute on individual observations
  arrange: order observations
  summarize: aggregate observations

library(dplyr)
str(mtcars)


mtcars

mtcars |> select(mpg, cyl, hp) # select variable (column) mpg, cyl, hp
mtcars |> filter(mpg > 15.2) # keep data of the variable mpg > 15.2
mtcars |> mutate(xyz = mpg - 3) # add a variable (column) xyz, which equals mpg -3

mtcars |> arrange(mpg) # sort according to the variable (column) mpg, from the largest to the smallest
mtcars |> arrange(desc(mpg)) # sort according to the variable (column) mpg, from the smallest to the largest

mtcars |> summarise(mean(mpg)) # the mean (average) of the variable (column) mpg

#select: select/unselect variables
#filter: filter observations
#mutate: compute on individual observations
#arrange: order observations
#summarize: aggregate observations

mtcars |>
  select(mpg, cyl, hp) |>
  filter(mpg > 15.2) |>
  mutate(xyz = mpg - 3) |>
  arrange(mpg) |>
  summarise(mean(mpg))

pressure |> filter(pressure > 10)

str(Orange)
Orange |> filter(Tree==1)
Orange |> arrange(circumference)
Orange |> summarise(mean(age))
Orange |> filter(Tree==5) |> mutate(year = 2024 - age)

mtcars |> group_by(gear)
mtcars |> group_by(gear) |> summarise(avg_mpg = mean(mpg))
mtcars |> group_by(gear) |> summarise(avg_mpg = mean(mpg)) |> arrange(avg_mpg)

Part7:
import data
ggplot


Part8: 

### ###
Pipe in R, written as |>, is a native feature of the R language since version 4.1.0.
It takes the output of one function and passes it into another function as an argument.

Pipe in R is an operator that takes the output of one function and passes it into another function as an argument.
It links together all the steps in data analysis making the code more efficient and readable.

formerly written as %>%
### ###
vertical bar character | (which, for this reason, is often called "pipe character"
greater-than sign
### ###
library(dplyr)
### ###
head(mtcars)
result <- mtcars |> filter()
### ###
function and argument
### ###



